{"version":3,"sources":["static/products.js","components/Products.js","components/Cart.js","App.js","serviceWorker.js","index.js"],"names":["products","name","price","url","useStyles","makeStyles","root","maxWidth","margin","cactions","display","alignItems","justifyContent","media","padding","height","width","Products","cart","updateCart","classes","className","map","item","index","key","Card","CardActionArea","CardMedia","component","alt","image","title","style","borderWidth","borderColor","CardContent","Typography","gutterBottom","variant","color","CardActions","Button","onClick","newCart","cartItem","find","i","quantity","push","addtocart","Cart","length","filter","removefromcart","Math","ceil","reduce","sum","App","useState","viewCart","setView","useAuth0","loginWithRedirect","isAuthenticated","isLoading","logout","Spinner","animation","prev","shopProducts","size","Boolean","window","location","hostname","match","ReactDOM","render","domain","clientId","redirectUri","origin","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a7ceff40.chunk.js","sourcesContent":["const products = [\r\n    {\r\n        name:'1TB USB drive',\r\n        price:20.99,\r\n        url:'https://images-na.ssl-images-amazon.com/images/I/71JRuPoEBBL._AC_SX466_.jpg'\r\n    },\r\n    {\r\n        name:'Pencil Box',\r\n        price:9.99,\r\n        url:'https://images-na.ssl-images-amazon.com/images/I/61q8y-khLrL._AC_SY355_.jpg'\r\n    },\r\n    {\r\n        name:'Cutlery set',\r\n        price:19.99,\r\n        url:'https://www.rehabmart.com/imagesfromrd/71dcDTS8diL._SX466_.jpg'\r\n    },\r\n    {\r\n        name:'Headphones',\r\n        price:299.00,\r\n        url:'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQ0Z-nNzZYoGWXdPiEtqcpCXNLVoNQKxuuzI9ISMo3rKF3WZp2OrTQibiBD031ioeYryD6OtH4&usqp=CAc'\r\n    },\r\n    {\r\n        name:'4GB Graphics Card',\r\n        price:100.99,\r\n        url:'https://images-na.ssl-images-amazon.com/images/I/71hdYpK6ioL._SL1500_.jpg'\r\n    },\r\n\r\n]\r\n\r\nexport default products;","import React from 'react';\r\nimport { Button } from 'react-bootstrap'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 250,\r\n        // maxHeight: 300,\r\n        margin: '10px',\r\n    },\r\n    cactions: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent:'center'\r\n    },\r\n    media: {\r\n        padding: '5px',\r\n        height: 175,\r\n        width: 250,\r\n    },\r\n});\r\n\r\nfunction Products({ cart, products, updateCart }) {\r\n    const classes = useStyles()\r\n    \r\n    const addtocart = (item) => {\r\n        let newCart = [...cart]\r\n        let cartItem = newCart.find(i => i.name === item.name)\r\n        if (cartItem) {\r\n            cartItem.quantity++;\r\n        } else {\r\n            cartItem = { ...item, quantity: 1 }\r\n            newCart.push(cartItem)\r\n        }\r\n        updateCart(newCart)\r\n    }\r\n\r\n    return (\r\n        <div className=\"proddiv\">\r\n            <h1> Shop with us! </h1>\r\n            <div className=\"products\">\r\n                {\r\n                    products.map((item, index) => (\r\n                        <div className=\"product\" key={index}>\r\n                            <Card className={classes.root}>\r\n                                <CardActionArea>\r\n                                    <CardMedia\r\n                                        className={classes.media}\r\n                                        component=\"img\"\r\n                                        alt=\"Contemplative Reptile\"\r\n                                        height=\"140\"\r\n                                        image={item.url}\r\n                                        title=\"Hi sticker\"\r\n                                    />\r\n                                    <hr style={{ margin: 0, padding: 0, borderWidth: 0.5, borderColor: 'darkblue' }} />\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom variant=\"h5\" component=\"h2\" color=\"primary\">\r\n                                            {item.name}\r\n                                        </Typography>\r\n                                        <Typography variant=\"h5\" color=\"textPrimary\" component=\"p\">${item.price}</Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                                <CardActions className={classes.cactions}>\r\n                                    <Button onClick={() => addtocart(item)}> Cart it! </Button>\r\n                                </CardActions>\r\n                            </Card>\r\n\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Products;","import React from 'react';\r\nimport { Button } from 'react-bootstrap'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 250,\r\n        // maxHeight: 300,\r\n        margin: '10px',\r\n    },\r\n    cactions: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n\r\n    },\r\n    media: {\r\n        padding: '5px',\r\n        height: 175,\r\n        width: 250,\r\n    },\r\n});\r\n\r\nfunction Cart({ cart, updateCart }) {\r\n    const classes = useStyles()\r\n\r\n    const sumTotal = () => {\r\n        return Math.ceil(cart.reduce((sum, { price, quantity }) => sum + price * quantity, 0))\r\n    }\r\n\r\n\r\n    const removefromcart = (item) => {\r\n        updateCart(cart.filter(i => i !== item))\r\n    }\r\n\r\n    return (\r\n        <div className=\"proddiv\">\r\n            <header><h2>Checkout Cart : </h2></header>\r\n            {/* <div className=\"fullpage\">\r\n                <h4>Hi</h4>\r\n            </div> */}\r\n            {cart.length>0? <div>\r\n                <div className=\"cart\">\r\n                    {\r\n                        cart.map((item, index) => {\r\n                            // console.log(item,'yehaaya')\r\n                            return (\r\n                                <div className=\"product\" key={index}>\r\n                                    <Card className={classes.root}>\r\n                                        <CardActionArea>\r\n                                            <CardMedia\r\n                                                className={classes.media}\r\n                                                component=\"img\"\r\n                                                alt=\"Contemplative Reptile\"\r\n                                                height=\"140\"\r\n                                                image={item.url}\r\n                                                title=\"Hi sticker\"\r\n                                            />\r\n                                            <hr style={{ margin: 0, padding: 0, borderWidth: 0.5, borderColor: 'darkblue' }} />\r\n                                            <CardContent>\r\n                                                <Typography gutterBottom variant=\"h5\" component=\"h2\" color=\"primary\">\r\n                                                    {item.name}\r\n                                                </Typography>\r\n                                                <Typography variant=\"body1\" color=\"textPrimary\" component=\"p\">Quantity: {item.quantity}</Typography>\r\n                                                <Typography variant=\"body1\" color=\"textPrimary\" component=\"p\">${item.price}</Typography>\r\n                                            </CardContent>\r\n                                        </CardActionArea>\r\n                                        <CardActions className={classes.cactions}>\r\n                                            <Button onClick={() => removefromcart(item)}> Remove! </Button>\r\n                                        </CardActions>\r\n                                    </Card>\r\n\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n                <Button> Pay ${sumTotal()}</Button>\r\n            </div>:\r\n            <div className=\"empty\"><h3 className=\"emptyname\">Empty Cart found. Unacceptable!</h3></div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default Cart;","import React, { useState } from 'react';\nimport './App.css';\nimport shopProducts from './static/products'\nimport Products from './components/Products';\nimport Cart from './components/Cart';\nimport { useAuth0 } from '@auth0/auth0-react';\nimport {Spinner, Button} from 'react-bootstrap'\n\n\n\nfunction App() {\n  const [cart, updateCart] = useState([])\n  const [viewCart, setView] = useState(false);\n  const { loginWithRedirect, isAuthenticated, isLoading, logout } = useAuth0();\n  // const isAuth = true\n  const cartTotal = () => {\n    return cart.reduce((sum, { quantity }) => sum + quantity, 0);\n  }\n\n  const toggleCart = () => {\n    setView(prev => !prev);\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"loading\">\n        <Spinner animation=\"border\" />\n      </div>)\n  }\n\n  if (isAuthenticated) {\n    return (\n      <div className=\"App\">\n        <div className=\"inApp\">\n          <header className=\"header\">\n            <Button onClick={() => toggleCart()}>{viewCart?'Shop for more!':'Checkout Cart - '+cartTotal()}</Button>\n            <Button onClick={() => logout()}> Logout </Button>\n          </header>\n          \n          {!viewCart && <Products cart={cart} products={shopProducts} updateCart={updateCart} />}\n          {viewCart && <Cart cart={cart} updateCart={updateCart} />}\n\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"logindiv\">\n      <Button variant=\"danger\" size=\"lg\" onClick={() => loginWithRedirect()}> Press to Login / Signup </Button>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Auth0Provider} from '@auth0/auth0-react';\nimport * as serviceWorker from './serviceWorker';\n\nconst domain = 'dev-i-yeputq.us.auth0.com'\nconst clientId = 'CXX1MWlAPhgDIn51R5q3bLwvq1FNxp0W'\n\nReactDOM.render(\n  <Auth0Provider domain={domain} clientId={clientId} redirectUri={window.location.origin}>\n    <App />\n  </Auth0Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}